//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SonarLint.VisualStudio.Integration.Vsix.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class DaemonStrings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal DaemonStrings() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SonarLint.VisualStudio.Integration.Vsix.Resources.DaemonStrings", typeof(DaemonStrings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to activate support of additional languages: {0}
        ///
        ///See the SonarLint output window for more detail..
        /// </summary>
        internal static string Download_ERROR {
            get {
                return ResourceManager.GetString("Download_ERROR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SonarLint - download error.
        /// </summary>
        internal static string Download_ErrorDlgTitle {
            get {
                return ResourceManager.GetString("Download_ErrorDlgTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Download error:.
        /// </summary>
        internal static string Download_ErrorLogMessage {
            get {
                return ResourceManager.GetString("Download_ErrorLogMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Daemon download url: {0}.
        /// </summary>
        internal static string Download_Url {
            get {
                return ResourceManager.GetString("Download_Url", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Finished downloading the daemon..
        /// </summary>
        internal static string Downloaded {
            get {
                return ResourceManager.GetString("Downloaded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Downloading the daemon....
        /// </summary>
        internal static string Downloading {
            get {
                return ResourceManager.GetString("Downloading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Daemon error occurred in editor integration: {0}.
        /// </summary>
        internal static string Editor_ERROR {
            get {
                return ResourceManager.GetString("Editor_ERROR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error occurred configuring the daemon: {0}.
        /// </summary>
        internal static string ERROR_ConfiguringDaemon {
            get {
                return ResourceManager.GetString("ERROR_ConfiguringDaemon", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error occurred initializing the daemon package: {0}.
        /// </summary>
        internal static string ERROR_InitializingDaemon {
            get {
                return ResourceManager.GetString("ERROR_InitializingDaemon", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error occurred installing the daemon: {0}.
        /// </summary>
        internal static string ERROR_InstallingDaemon {
            get {
                return ResourceManager.GetString("ERROR_InstallingDaemon", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Finished initializing the daemon package..
        /// </summary>
        internal static string InitializationComplete {
            get {
                return ResourceManager.GetString("InitializationComplete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Initializing the daemon package....
        /// </summary>
        internal static string Initializing {
            get {
                return ResourceManager.GetString("Initializing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Finished installing the daemon..
        /// </summary>
        internal static string Installed {
            get {
                return ResourceManager.GetString("Installed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installing the daemon....
        /// </summary>
        internal static string Installing {
            get {
                return ResourceManager.GetString("Installing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The daemon file name supplied in {0} environment variable is invalid (&apos;{1}&apos;). Using the default download URL..
        /// </summary>
        internal static string InvalidFileNameInDownloadEnvVar {
            get {
                return ResourceManager.GetString("InvalidFileNameInDownloadEnvVar", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Download URL supplied in {0} environment variable is invalid (&apos;{1}&apos;). Using default download URL..
        /// </summary>
        internal static string InvalidUrlInDownloadEnvVar {
            get {
                return ResourceManager.GetString("InvalidUrlInDownloadEnvVar", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Daemon started successfully..
        /// </summary>
        internal static string Started {
            get {
                return ResourceManager.GetString("Started", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Starting the daemon....
        /// </summary>
        internal static string Starting {
            get {
                return ResourceManager.GetString("Starting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Daemon stopped successfully..
        /// </summary>
        internal static string Stopped {
            get {
                return ResourceManager.GetString("Stopped", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stopping the daemon....
        /// </summary>
        internal static string Stopping {
            get {
                return ResourceManager.GetString("Stopping", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Using default daemon download URL.
        /// </summary>
        internal static string UsingDefaultDownloadLocation {
            get {
                return ResourceManager.GetString("UsingDefaultDownloadLocation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Using daemon download url from {0} environment variable.
        /// </summary>
        internal static string UsingDownloadUrlFromEnvVar {
            get {
                return ResourceManager.GetString("UsingDownloadUrlFromEnvVar", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Daemon version: {0}.
        /// </summary>
        internal static string Version {
            get {
                return ResourceManager.GetString("Version", resourceCulture);
            }
        }
    }
}
